<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:ios="clr-namespace:Microsoft.Maui.Controls.PlatformConfiguration.iOSSpecific;assembly=Microsoft.Maui.Controls"
             xmlns:tabView="clr-namespace:Syncfusion.Maui.Toolkit.TabView;assembly=Syncfusion.Maui.Toolkit"
             xmlns:converters="clr-namespace:IVCNetMaui.Converters"
             xmlns:selectors="clr-namespace:IVCNetMaui.Selectors"
             xmlns:viewModels="clr-namespace:IVCNetMaui.ViewModels.Dashboard"
             xmlns:controls="clr-namespace:IVCNetMaui.Controls"
             xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             x:Class="IVCNetMaui.Views.Dashboard.DashboardMainPage"
             x:DataType="viewModels:DashboardMainViewModel"
             x:Name="DashboardPage"
             Title="Dashboard"
             HideSoftInputOnTapped="True"
             BackgroundColor="{StaticResource BlueGray}">
    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <converters:StatusToColorConverter x:Key="StatusConverter" />
            <Style x:Key="PropertyBorder" TargetType="Border">
                <Setter Property="Padding" Value="8, 10"/>
                <Setter Property="BackgroundColor" Value="White"/>
                <Setter Property="Shadow" Value="0 3 12 hsla(210, 7%, 56%, 0.1)" />
            </Style>
            <Style TargetType="Label" BasedOn="{StaticResource Body-S}">
                <Setter Property="TextColor" Value="{StaticResource Gray950}"/>
            </Style>
            <DataTemplate x:Key="Active" x:DataType="viewModels:EdgeCardViewModel">
                <Border BackgroundColor="{StaticResource Gray100}" StrokeShape="Rectangle">
                    <VerticalStackLayout 
                          Spacing="12"
                          Padding="{StaticResource CardPadding}">
                        <Grid ColumnDefinitions="Auto, Auto, *" ColumnSpacing="4" >
                            <Label Text="{Binding EdgeState}"
                                   Padding="6, 0"
                                   TextColor="{Binding EdgeState, Converter={StaticResource StatusConverter}, ConverterParameter='Label'}" 
                                   Style="{StaticResource Label-S}" 
                                   BackgroundColor="{Binding EdgeState, Converter={StaticResource StatusConverter}}"
                                   VerticalTextAlignment="Center"/>
                            <Label Grid.Column="1" Text="{Binding EdgeInfo.Name, TargetNullValue='Unknown', FallbackValue='Unknown'}" Style="{StaticResource Title-M}" MaxLines="1" LineBreakMode="TailTruncation"/>
                            <Label Grid.Column="2" Text="{Binding EdgeInfo.Id, StringFormat='#{0}', FallbackValue='-1'}" Style="{StaticResource Title-M}" TextColor="{StaticResource Gray700}" VerticalTextAlignment="Center"/>
                        </Grid>   
                   
                        <Border Style="{StaticResource PropertyBorder}">
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding NavigateToEdgeHealthCommand}" />
                            </Border.GestureRecognizers>
                            <Border.Behaviors>
                                <toolkit:TouchBehavior PressedBackgroundColor="{StaticResource Gray300}"
                                                       DefaultBackgroundColor="White"
                                                       PressedScale="0.98"/>
                            </Border.Behaviors>
                            <Grid RowDefinitions="Auto, Auto, Auto, Auto, Auto"
                                  ColumnDefinitions="*, *"
                                  RowSpacing="6">
                                <Label Text="Version" TextColor="{StaticResource Gray700}"/>
                                <Label Grid.Column="1" Text="{Binding Version}" />
                                <Label Grid.Row="1" Text="Uptime" TextColor="{StaticResource Gray700}"/>
                                <Label Grid.Row="1" Grid.Column="1" Text="{Binding Uptime, StringFormat='{0:%d\\.hh\\:mm\\:ss}'}"/>
                                <Label Grid.Row="2" Text="System" TextColor="{StaticResource Gray700}"/>
                                <Label Grid.Row="2" Grid.Column="1">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding CpuUsage, StringFormat='{0}% CPU'}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Label Grid.Row="3" Text="Video Process" TextColor="{StaticResource Gray700}"/>
                                <Label Grid.Row="3" Grid.Column="1">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding VideoState}" TextColor="{Binding VideoState, Converter={StaticResource StatusConverter}, ConverterParameter='Label'}"/>
                                            <Span Text=" • "/>
                                            <Span Text="{Binding VideoCpuUsage, StringFormat='{0}% CPU'}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                                <Label Grid.Row="4" Text="UI Process" TextColor="{StaticResource Gray700}"/>
                                <Label Grid.Row="4" Grid.Column="1">
                                    <Label.FormattedText>
                                        <FormattedString>
                                            <Span Text="{Binding UiState}" TextColor="{Binding UiState, Converter={StaticResource StatusConverter}, ConverterParameter='Label'}"/>
                                            <Span Text=" • "/>
                                            <Span Text="{Binding UiCpuUsage, StringFormat='{0}% CPU'}"/>
                                        </FormattedString>
                                    </Label.FormattedText>
                                </Label>
                            </Grid>
                        </Border>
                        
                        <Border Style="{StaticResource PropertyBorder}" IsVisible="{Binding IoTIsVisible}">
                            <Border.GestureRecognizers>
                                <TapGestureRecognizer Command="{Binding NavigateToEdgeIoTCommand}" />
                            </Border.GestureRecognizers>
                            <Border.Behaviors>
                                <toolkit:TouchBehavior PressedBackgroundColor="{StaticResource Gray300}"
                                                       DefaultBackgroundColor="White"
                                                       PressedScale="0.98"/>
                            </Border.Behaviors>
                            <VerticalStackLayout Spacing="6">
                                <Grid ColumnDefinitions="*, *" IsVisible="{Binding CameraIsVisible}">
                                    <Label Text="Camera" TextColor="{StaticResource Gray700}"/>
                                    <Label Grid.Column="1">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding Cameras.Count}"/>
                                                <Span Text="{Binding CameraActivated, StringFormat=' • {0} Active'}"/>
                                                <Span Text="{Binding CameraUp, StringFormat=' • {0} Up'}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                </Grid>
                                <Grid ColumnDefinitions="*, *" IsVisible="{Binding ModbusDeviceIsVisible}">
                                    <Label Text="Modbus Device" TextColor="{StaticResource Gray700}"/>
                                    <Label Grid.Column="1">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding ModbusDevices.Count}"/>
                                                <Span Text="{Binding ModbusDeviceActivated, StringFormat=' • {0} Active'}"/>
                                                <Span Text="{Binding ModbusDeviceUp, StringFormat=' • {0} Up'}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                </Grid>
                                
                                <Grid ColumnDefinitions="*, *" IsVisible="{Binding WeatherStationIsVisible}">
                                    <Label Text="Weather Station" TextColor="{StaticResource Gray700}"/>
                                    <Label Grid.Column="1">
                                        <Label.FormattedText>
                                            <FormattedString>
                                                <Span Text="{Binding WeatherStations.Count}"/>
                                                <Span Text="{Binding WeatherStationActivated, StringFormat=' • {0} Active'}"/>
                                                <Span Text="{Binding WeatherStationUp, StringFormat=' • {0} Up'}"/>
                                            </FormattedString>
                                        </Label.FormattedText>
                                    </Label>
                                </Grid>
                            </VerticalStackLayout>
                        </Border>
                    </VerticalStackLayout>
                </Border>
            </DataTemplate>
            <DataTemplate x:Key="Deactivated" x:DataType="viewModels:EdgeCardViewModel">
                <Border BackgroundColor="{StaticResource Gray100}" StrokeShape="Rectangle">
                    <VerticalStackLayout 
                        Spacing="4"
                        Padding="{StaticResource CardPadding}">
                        <Grid ColumnDefinitions="Auto, Auto, *" ColumnSpacing="4" >
                            <Label Text="{Binding EdgeState}" 
                                   TextColor="{Binding EdgeState, Converter={StaticResource StatusConverter}, ConverterParameter='Label'}" 
                                   BackgroundColor="{Binding EdgeState, Converter={StaticResource StatusConverter}}"
                                   Style="{StaticResource Label-S}" 
                                   VerticalTextAlignment="Center"
                                   Padding="6, 0"/>
                            <Label Grid.Column="1" Text="{Binding EdgeInfo.Name, TargetNullValue='Unknown', FallbackValue='Unknown'}" Style="{StaticResource Title-M}" MaxLines="1" LineBreakMode="TailTruncation"/>
                            <Label Grid.Column="2" Text="{Binding EdgeInfo.Id, StringFormat='#{0}', FallbackValue='-1'}" Style="{StaticResource Title-M}" TextColor="{StaticResource Gray700}" VerticalTextAlignment="Center"/>
                        </Grid>
                    </VerticalStackLayout>
                </Border>
            </DataTemplate>
            <selectors:EdgeCardTemplateSelector x:Key="EdgeCardTemplateSelector" 
                                                ActiveCardTemplate="{StaticResource Active}"
                                                DeactivatedCardTemplate="{StaticResource Deactivated}"/>
        </ResourceDictionary>
    </ContentPage.Resources>

    <tabView:SfTabView Style="{StaticResource Header}">
            <tabView:SfTabView.Items>
                <tabView:SfTabItem Header="Hub">
                    <tabView:SfTabItem.Content>
                        <Grid RowDefinitions="*" BackgroundColor="Transparent">
                            <RefreshView Command="{Binding RefreshCommand}" IsVisible="{Binding HubInitializing, Converter={StaticResource InverseBooleanConverter}}" IsRefreshing="{Binding IsRefreshing}">
                                <ScrollView>
                                    <controls:HealthMonitorSummaryControl 
                                        HealthStatus="{Binding HealthStatus}" 
                                        NavigateToSystemCommand="{Binding NavigateToSystemCommand}" 
                                        NavigateToVideoProcessCommand="{Binding NavigateToVideoProcessCommand}"
                                        NavigateToUiProcessCommand="{Binding NavigateToUiProcessCommand}"
                                        Padding="{StaticResource MainPadding}"/>
                                </ScrollView>
                            </RefreshView>
                            <ActivityIndicator IsRunning="{Binding HubInitializing}" />
                        </Grid>
                        
                    </tabView:SfTabItem.Content>
                </tabView:SfTabItem>

                <tabView:SfTabItem Header="Edge">
                    <tabView:SfTabItem.Content>
                        <Grid RowDefinitions="Auto, *">
                            <!-- <SearchBar ios:SearchBar.SearchBarStyle="Minimal" Placeholder="Search"/> -->
                            <CollectionView Grid.Row="1" 
                                            ItemsSource="{Binding VaEdgeCards}" 
                                            IsVisible="{Binding EdgeInitializing, Converter={StaticResource InverseBooleanConverter}}" 
                                            ItemTemplate="{StaticResource EdgeCardTemplateSelector}">
                                <CollectionView.ItemsLayout>
                                    <GridItemsLayout Orientation="Vertical"
                                                       VerticalItemSpacing="12"
                                                       HorizontalItemSpacing="8">
                                        <GridItemsLayout.Span>
                                            <OnIdiom x:TypeArguments="system:Int32" Phone="1" Default="1" />
                                        </GridItemsLayout.Span>
                                    </GridItemsLayout>
                                </CollectionView.ItemsLayout>
                            </CollectionView>
                            <ActivityIndicator Grid.Row="1" IsRunning="{Binding EdgeInitializing}" />
                        </Grid>
                    </tabView:SfTabItem.Content>
                </tabView:SfTabItem>
            </tabView:SfTabView.Items>
        </tabView:SfTabView>

</ContentPage>